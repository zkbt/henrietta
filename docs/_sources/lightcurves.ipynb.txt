{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Light Curve Basics\n",
    "\n",
    "The examples over at [lightkurve](http://lightkurve.keplerscience.org) are really useful for understanding all the wonderful ways you can access *Kepler* data via online archives. This very short example demonstrates a quick-and-dirty tool that uses `lightkurve` to download the entire *Kepler* light curve for a particular star."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Download a light curve.\n",
    "\n",
    "Our first step is to download some data. We'll import our basic set of tools, and then use them to download a Kepler light curve."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "# let's import some common Python packages we like\n",
    "import matplotlib.pyplot as plt, numpy as np\n",
    "\n",
    "# let's also import our custom Python package for this class\n",
    "import henrietta as hsl"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "This last command creates an object called `hsl` that contains a useful function: `download_kepler_lc`. This function takes a star name as input, and tries its best to return a *Kepler* light curve for it. There are a few options you can feed it if you want, to know what those are, remember that in `jupyter` you can type the name of a function, and then hit `<shift>-<tab>` to see what it does (once for basic info, twice for more). Give it a try!"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "hsl.download_kepler_lc"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Here, we use that function to download a light curve for Kepler-186. Light curves from Kepler are split into ~90 day quarters; this function makes a rough attempt at stitching all of those together. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "lc = hsl.download_kepler_lc('Kepler-186')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Plot your light curve.\n",
    "\n",
    "The `lc` object we just created it is a `KeplerLightCurve` object (see the documentation for `lightkurve`) if you want to know more about what these objects can do). One snazzy feature of a light curve object like this is that we can make a simple plot of the data, just by running"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "lc.plot()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "You'll notice that the folks who wrote this tool put a bit of thought into making sure the plot looks pretty good and the axes are labeled in a relatively straightforward way. \n",
    "\n",
    "However, we might want to play around with things a bit, so let's dig under the hood of our light curve, and pull out the actual data that's being plotted. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "# this is the time, in something like Julian Date\n",
    "time_in_days = lc.time\n",
    "\n",
    "# this is the relative flux of the star, normalized to the star's median brightness\n",
    "relative_flux = lc.flux"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "print(\"Our light curve contains {} data points!\".format(len(time_in_days)))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "With these arrays, you can start playing around with real Kepler data, either for Kepler-186 or for any other star you choose!"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.6.2"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
